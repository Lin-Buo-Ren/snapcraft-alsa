name: alsa
version: '1.1.3'
summary: ALSA part for snapcraft
description: |
  ALSA part for snapcraft, which will compile ALSA and install a loader script
  which redirects audio through pulseaudio without requiring the `alsa` plug to
  be connected manually or by store assertion.

  In your snap's snapcraft.yaml add `after: [alsa]` to the part which will depend
  upon alsa, and add `alsa-launch` to your app's command. Remove any references
  to `libasound2` and `libasound2-dev` from build- and stage-packages. You also
  currently need to ensure the dependency chain by adding stub part definitions:

    apps:
      my-app:
        command: desktop-launch alsa-launch $SNAP/usr/bin/my-app
        plugs: [...]

    parts:
      # Sub parts for alsa and alsa-plugins
      alsa:
        after: [alsa-lib, alsa-plugins]
      alsa-plugins:
        after: [alsa-lib]
      
      # Your app here
      depends-on-alsa:
        after: [alsa, desktop-glib-only]
        plugin: nil
        source: ...
        ...

parts:
  alsa-lib:
    plugin: autotools
    source: http://archive.ubuntu.com/ubuntu/pool/main/a/alsa-lib/alsa-lib_1.1.3.orig.tar.bz2
    # source: ftp://ftp.alsa-project.org/pub/lib/alsa-lib-1.1.5.tar.bz2
    configflags:
    - --prefix=/usr
    - --sysconfdir=/etc
    - --libexec=/usr/lib
    - --libdir=/usr/lib
    - --localstatedir=/var
    - --with-configdir=/snap/$SNAPCRAFT_PROJECT_NAME/current/usr/share/alsa
    - --with-plugindir=/snap/$SNAPCRAFT_PROJECT_NAME/current/usr/lib/alsa-lib
    - --disable-static
    organize:
      snap/*/current/usr/lib/*: usr/lib/
    stage:
    - usr/include
    - usr/lib
    prime:
    - -usr/bin
    - -usr/include
    - -usr/lib/pkgconfig
    - -usr/share/alsa/alsa.conf
    - -usr/share/alsa/pcm
    - -usr/share/alsa/topology/broadwell

  alsa-plugins:
    after: [alsa-lib]
    plugin: autotools
    source: http://archive.ubuntu.com/ubuntu/pool/main/a/alsa-plugins/alsa-plugins_1.1.1.orig.tar.bz2
    # source: ftp://ftp.alsa-project.org/pub/plugins/alsa-plugins-1.1.5.tar.bz2
    configflags:
    - --prefix=/usr
    - --sysconfdir=/etc
    - --libexec=/usr/lib
    - --libdir=/usr/lib
    - --localstatedir=/var
    - --disable-oss
    - --disable-usbstream
    - --disable-arcamav
    - --disable-avcodec
    - --with-plugindir=/snap/$SNAPCRAFT_PROJECT_NAME/current/usr/lib/alsa-lib
    - --disable-static
    organize:
      snap/*/current/usr/lib/*: usr/lib/
    stage:
    - usr/lib
    - usr/share/alsa
    build-packages:
    - libpulse-dev
    stage-packages:
    - libpulse0

  alsa:
    plugin: nil
    #after: [alsa-plugins, alsa-lib]
    prepare: |
      cat > alsa.conf <<EOF
      pcm.!default {
        type pulse
        fallback "sysdefault"
        hint {
          show on
          description "Default ALSA Output (currently PulseAudio Sound Server)"
        }
      }

      ctl.!default {
        type pulse
        fallback "sysdefault"
      }
      EOF

      cat > alsa-launch <<EOF
      #!/bin/bash
      if [ "\$SNAP_ARCH" == "amd64" ]; then
        ARCH="amd64-linux-gnu"
      elif [ "\$SNAP_ARCH" == "armhf" ]; then
        ARCH="arm-linux-gnueabihf"
      elif [ "\$SNAP_ARCH" == "arm64" ]; then
        ARCH="aarch64-linux-gnu"
      else
        ARCH="\$SNAP_ARCH-linux-gnu"
      fi
      export LD_LIBRARY_PATH="\$SNAP/usr/lib/alsa-lib:\$SNAP/usr/lib/\$ARCH/pulseaudio:\$LD_LIBRARY_PATH"
      export ALSA_CONFIG_PATH="\$SNAP/etc/alsa.conf"
      exec "\$@"
      EOF
    install: |
      install -m644 -D -t $SNAPCRAFT_PART_INSTALL/etc alsa.conf
      install -m755 -D -t $SNAPCRAFT_PART_INSTALL/bin alsa-launch
